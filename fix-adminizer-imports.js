// #!/usr/bin/env node

// const fs = require('fs');
// const path =     
    console.log(`üéâ Fixed ${fixedFiles} files with import issues`);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å import.meta.dirname
    fixImportMetaDirname();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è import.meta.dirname –≤ adminizer
function fixImportMetaDirname() {
    console.log('üîß Fixing import.meta.dirname issues...');
    
    const filesToFix = [
        './node_modules/adminizer/lib/v4/PolicyManager.js',
        './node_modules/adminizer/lib/v4/model/adapter/waterline.js',
        './node_modules/adminizer/lib/v4/model/adapter/sequelize.js',
        './node_modules/adminizer/lib/Adminizer.js',
        './node_modules/adminizer/system/bindAssets.js',
        './node_modules/adminizer/system/bindMediaManager.js',
        './node_modules/adminizer/system/bindInertia.js',
        './node_modules/adminizer/system/bindModels.js',
        './node_modules/adminizer/helpers/viteHelper.js'
    ];
    
    let fixedMetaFiles = 0;
    filesToFix.forEach(file => {
        if (fs.existsSync(file) && fixImportMetaDirnameInFile(file)) {
            fixedMetaFiles++;
        }
    });
    
    console.log(`üéØ Fixed ${fixedMetaFiles} files with import.meta.dirname issues`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è import.meta.dirname –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ
function fixImportMetaDirnameInFile(filePath) {
    const content = fs.readFileSync(filePath, 'utf8');
    
    // –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è import.meta.dirname –Ω–∞ fallback
    const fixedContent = content.replace(
        /import\.meta\.dirname/g,
        '(import.meta.dirname || path.dirname(import.meta.url ? new URL(import.meta.url).pathname : __filename))'
    );
    
    if (content !== fixedContent) {
        fs.writeFileSync(filePath, fixedContent);
        console.log(`‚úÖ Fixed import.meta.dirname in: ${filePath}`);
        return true;
    }
    return false;quire('path');

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö .js —Ñ–∞–π–ª–æ–≤
// function findJSFiles(dir, fileList = []) {
//     const files = fs.readdirSync(dir);
//     files.forEach(file => {
//         const filePath = path.join(dir, file);
//         const stat = fs.statSync(filePath);
//         if (stat.isDirectory()) {
//             findJSFiles(filePath, fileList);
//         } else if (file.endsWith('.js')) {
//             fileList.push(filePath);
//         }
//     });
//     return fileList;
// }

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ —Ñ–∞–π–ª–µ
// function fixImportsInFile(filePath) {
//     const content = fs.readFileSync(filePath, 'utf8');
//     let hasChanges = false;
    
//     // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
//     const importRegex = /import\s+([^;]+)\s+from\s+['"]([^'"]+?)['"]/g;
//     let newContent = content.replace(importRegex, (match, imports, importPath) => {
//         // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç—ã –∏–∑ node_modules (–Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏)
//         if (!importPath.startsWith('.') && !importPath.startsWith('/')) {
//             return match;
//         }
        
//         // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∏–º–µ—é—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
//         if (importPath.match(/\.\w+$/)) {
//             return match;
//         }
        
//         return `import ${imports} from "${importPath}.js"`;
//     });
//     if (newContent !== content) {
//         hasChanges = true;
//     }
    
//     if (hasChanges) {
//         fs.writeFileSync(filePath, newContent);
//         console.log(`‚úÖ Fixed imports in: ${filePath}`);
//         return true;
//     }
//     return false;
// }

// // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
// function fixAdminizerImports() {
//     const adminizerPath = './node_modules/adminizer';
    
//     if (!fs.existsSync(adminizerPath)) {
//         console.log('‚ùå Adminizer not found in node_modules');
//         return;
//     }
    
//     console.log('üîç Scanning for JS files in adminizer...');
//     const jsFiles = findJSFiles(adminizerPath);
    
//     console.log(`üìÅ Found ${jsFiles.length} JS files`);
    
//     let fixedFiles = 0;
//     jsFiles.forEach(file => {
//         if (fixImportsInFile(file)) {
//             fixedFiles++;
//         }
//     });
    
//     console.log(`üéâ Fixed ${fixedFiles} files with import issues`);
// }

// // –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
// if (require.main === module) {
//     fixAdminizerImports();
// }

// module.exports = { fixAdminizerImports };
