// ESM initialize.mjs - –≥–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ adminpanel
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

export default async function initialize(sails, hook) {
    console.log('üöÄ Starting adminpanel initialization...');

    try {
        // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º Adminizer –∏ –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π –∞–¥–∞–ø—Ç–µ—Ä
        const [{ Adminizer }, { WaterlineAdapter }, Waterline, sailsDisk] = await Promise.all([
            import('adminizer'),
            import('./SailsORMAdapter.js'), // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π –∞–¥–∞–ø—Ç–µ—Ä
            import('waterline'),
            import('sails-disk')
        ]);

        console.log('‚úÖ All dependencies loaded successfully');

        // –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π ORM –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π adminizer
        console.log('üîÑ Creating separate ORM for adminizer system models...');
        const adminizerORM = new (Waterline.default || Waterline)();

        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –º–æ–¥–µ–ª–∏ –∏–∑ adminizer
        console.log('üîÑ Registering adminizer system models...');
        await WaterlineAdapter.registerSystemModels(adminizerORM);

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è adminizer ORM
        const diskAdapterWithDefaults = {
            ...(sailsDisk.default || sailsDisk),
            defaults: {
                migrate: 'alter',
                schema: true,
                attributes: {
                    id: {type: 'number', autoMigrations: {autoIncrement: true}},
                    createdAt: {type: 'number', autoMigrations: {columnType: 'bigint'}},
                    updatedAt: {type: 'number', autoMigrations: {columnType: 'bigint'}}
                }
            }
        };

        const adminizerConfig = {
            adapters: {
                'adminizerDisk': diskAdapterWithDefaults
            },
            datastores: {
                adminizer: {  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è datastore –¥–ª—è adminizer
                    adapter: 'adminizerDisk',
                    inMemoryOnly: true
                }
            }
        };

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º adminizer ORM
        console.log('üîÑ Initializing adminizer Waterline ORM...');
        const adminizerOntology = await new Promise((resolve, reject) => {
            adminizerORM.initialize(adminizerConfig, (err, ontology) => {
                if (err) return reject(err);
                resolve(ontology);
            });
        });

        // –°–æ–∑–¥–∞–µ–º WaterlineAdapter —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏
        const waterlineAdapter = new WaterlineAdapter({orm: adminizerORM, ontology: adminizerOntology});
        const ormAdapters = [waterlineAdapter];

        // –°–æ–∑–¥–∞–µ–º Adminizer —Å ORM –∞–¥–∞–ø—Ç–µ—Ä–∞–º–∏
        console.log('‚öôÔ∏è Creating Adminizer instance...');
        const adminizer = new Adminizer(ormAdapters);

        // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è adminizer - –¥–æ–±–∞–≤–ª—è–µ–º MediaManager –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        const adminpanelConfig = {
            routePrefix: sails.config.adminpanel?.routePrefix || '/admin',
            auth: sails.config.adminpanel?.auth || false,
            policies: [],
            system: {
                defaultORM: 'waterline'
            },
            models: {},
            mediamanager: { // –î–æ–ª–∂–Ω–æ –±—ã—Ç—å mediamanager, –∞ –Ω–µ mediaManager
                fileStoragePath: './assets/uploads/', // –ü—É—Ç—å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
                baseUrl: '/uploads/', // URL –±–∞–∑–æ–≤—ã–π –ø—É—Ç—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º
                maxFileSize: 10 * 1024 * 1024, // 10MB –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                allowedFileTypes: ['image/jpeg', 'image/png', 'image/gif', 'image/webp'] // –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã
            }
        };

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º adminizer —Å –∫–æ–Ω—Ñ–∏–≥–æ–º
        console.log('üîÑ Initializing Adminizer...');
        console.log('üìã Config:', JSON.stringify(adminpanelConfig, null, 2));
        console.log('üîß ORM Adapters:', ormAdapters);
        await adminizer.init(adminpanelConfig);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º adminizer –≤ sails –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        sails.adminizer = adminizer;

        console.log('üéâ Adminpanel initialized successfully!');
        console.log(`üìç Admin panel available at: http://localhost:1337${adminpanelConfig.routePrefix}`);

		sails.hooks.http.app.use(adminizer.getMiddleware());
		let layer = sails.hooks.http.app._router.stack.slice(-1)[0]
		sails.hooks.http.app._router.stack.splice(1, 0, layer)

    } catch (error) {
        console.error('‚ùå Failed to initialize adminpanel:', error);
        throw error;
    }
}
