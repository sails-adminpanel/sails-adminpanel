'use strict';
// sql template autogenerated by gen-db-migrates

var async = require('async')
var dbm;
var type;
var seed;

/**
* We receive the dbmigrate dependency from dbmigrate initially.
* This enables us to not have to rely on NODE_PATH.
*/
exports.setup = function(options, seedLink) {
  dbm = options.dbmigrate;
  type = dbm.dataType;
  seed = seedLink;
};

exports.up = function (db, callback) {
  async.series([
    (cb) => db.createTable('mediamanagerap', {
    columns: {
    "id": {
        "type": "text",
        "primaryKey": true,
        "notNull": true
    },
    "parent": {
        "type": "text"
    },
    "mimeType": {
        "type": "text"
    },
    "path": {
        "type": "text"
    },
    "size": {
        "type": "real"
    },
    "group": {
        "type": "text"
    },
    "tag": {
        "type": "text"
    },
    "url": {
        "type": "text"
    },
    "filename": {
        "type": "text"
    },
    "createdAt": {
        "type": "bigint"
    },
    "updatedAt": {
        "type": "bigint"
    }
},
    ifNotExists: true
  }, cb),
(cb) => db.createTable('mediamanagerassociationsap', {
    columns: {
    "id": {
        "type": "text",
        "primaryKey": true,
        "notNull": true
    },
    "mediaManagerId": {
        "type": "text"
    },
    "model": {
        "type": "json"
    },
    "modelId": {
        "type": "json"
    },
    "widgetName": {
        "type": "text"
    },
    "sortOrder": {
        "type": "real"
    },
    "file": {
        "type": "text"
    },
    "createdAt": {
        "type": "bigint"
    },
    "updatedAt": {
        "type": "bigint"
    }
},
    ifNotExists: true
  }, cb),
(cb) => db.createTable('mediamanagermetaap', {
    columns: {
    "id": {
        "type": "text",
        "primaryKey": true,
        "notNull": true
    },
    "key": {
        "type": "text"
    },
    "value": {
        "type": "json"
    },
    "isPublic": {
        "type": "boolean"
    },
    "parent": {
        "type": "text"
    },
    "createdAt": {
        "type": "bigint"
    },
    "updatedAt": {
        "type": "bigint"
    }
},
    ifNotExists: true
  }, cb),
(cb) => db.addColumn('userap', 'isConfirmed', {"type":"boolean"}, cb),

  ], callback);
}

exports.down = function(db) {
  return null;
};

exports._meta = {
  "version": 1
};
