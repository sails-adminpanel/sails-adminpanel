<form action="" id="customForm">
    <%- include("add.ejs") %>
    <div>
        <button class="btn btn-green mt-4" id="save-group" type="submit">
            Save
        </button>
    </div>
</form>
<script>
	{
		let parentId = document.getElementById('parentId')
		let targetBlankNewItem = document.getElementById('targetBlankNewItem')
		console.log(jsonEditor)
		document.getElementById('customForm').addEventListener('submit', function (e) {
			e.preventDefault()
			let data = {}
			let uri = "<%= entity.uri %>/add"
			let checkboxReady = document.getElementById('checkbox-ready')

			setTimeout(async () => {
				for (let id in jsonEditor) {
					try {
						let json = jsonEditor[id].get();
						$('#form-' + id).val(JSON.stringify(json));
					} catch (e) {
						alert('JSON is invalid.');
						$('#form-' + id).show().focus().hide();
						jsonEditor[id].focus();
						return false;
					}
				}
				for (const id in tables) {
					try {
						let schema = tables[id].getSchema();
						let table = tables[id].getData();
						table = table.filter(item => {
							return !([...new Set(item)].length === 1 && [...new Set(item)][0] === null);
						});
						if (schema && Object.keys(schema).length) {
							table = table.map((item) => {
								let newItem = {};
								let keys = Object.keys(schema);
								for (let i = 0; i < keys.length; i++) {
									newItem[keys[i]] = item[i];
								}
								return newItem;
							});
						} else {
							table = table.map((item) => {
								return [null].concat(item);
							});
						}
						$('#form-' + id).val(JSON.stringify(table));
					} catch (e) {
						alert('Table is invalid!');
						return false;
					}
				}
				for (const eElement of e.target.elements) {
					if (eElement.value) {
						data[eElement.name] = eElement.value
					}
				}
				data.jsonPopupCatalog = true
				let res = await ky.post(uri, {json: data}).json()
				if (res.record && checkboxReady) {
					if (targetBlankNewItem) res.record.targetBlank = targetBlankNewItem.checked
					ky.post('', {
						json: {
							data: {
								record: res.record,
								parentId: parentId.value,
								type: "<%= entity.config.model %>"
							}, _method: 'createItem'
						}
					}).then(r => {
						checkboxReady.click()
					})
				}
			}, 100)
		})
	}
</script>
